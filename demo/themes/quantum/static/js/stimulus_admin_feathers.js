var q=Object.defineProperty;var b=(a,t,e)=>t in a?q(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var g=(a,t,e)=>b(a,typeof t!="symbol"?t+"":t,e);import{C as x,A as k}from"../assets/stimulus-CZA9Too6.js";class S extends x{connect(){console.log("ClassifierModalController connected"),this.initializeFromFormset(),this.updateSelectedCount(),this.setupSearchListener(),this.updateGroupSelectionCounts()}setupSearchListener(){this.hasSearchInputTarget&&this.searchInputTarget.addEventListener("input",this.handleSearch.bind(this))}initializeFromFormset(){this.element.querySelectorAll(".sequence-member[data-classifier-id]").forEach(e=>{const o=e.dataset.classifierId;o&&this.markCheckboxAsSelected(o)})}markCheckboxAsSelected(t){const e=this.element.querySelector(`input[type="checkbox"][value="${t}"]`);if(e){e.checked=!0;const o=e.closest(".classifier-item");o&&o.classList.add("selected")}}handleSelection(t){const e=t.target,o=e.value,l=e.closest(".classifier-group"),s=parseInt(l.dataset.maxSelections)||0;if(e.type==="radio")this.clearGroupSelections(l,e),e.checked&&this.addClassifierToFormset(o);else if(e.checked){if(s>0&&l.querySelectorAll('input[type="checkbox"]:checked').length>s){e.checked=!1,this.showLimitError(l,s);return}this.addClassifierToFormset(o)}else this.removeClassifierFromFormset(o);this.updateSelectedCount()}addClassifierToFormset(t){if(this.element.querySelector(`.sequence-member[data-classifier-id="${t}"]`))return;const e=this.element.querySelector(".sequence-add");e&&(e.click(),setTimeout(()=>{const o=this.element.querySelector(".w-sequence .sequence-member:last-child");if(o){const l=o.querySelector('select[name*="classifier"]');l&&(l.value=t,o.dataset.classifierId=t,l.dispatchEvent(new Event("change",{bubbles:!0})))}},50))}removeClassifierFromFormset(t){const e=this.element.querySelector(`.sequence-member[data-classifier-id="${t}"]`);e&&(e.remove(),this.updateManagementForm())}updateManagementForm(){const t=this.element.querySelector('input[name*="TOTAL_FORMS"]');if(t){const e=this.element.querySelectorAll(".sequence-member").length;t.value=e}}toggleGroup(t){const e=t.target.closest(".group-toggle");e.dataset.group;const l=e.closest(".classifier-group").querySelector(".classifier-items"),s=e.querySelector(".toggle-icon");l.style.display==="none"?(l.style.display="block",s.textContent="▼",e.classList.add("expanded")):(l.style.display="none",s.textContent="▶",e.classList.remove("expanded"))}toggleAllGroups(t){const e=t.target.closest(".collapse-all-button"),o=e.dataset.state;e.querySelector(".collapse-all-icon");const l=e.querySelector(".collapse-all-text"),s=this.element.querySelectorAll(".classifier-group");o==="expanded"?(s.forEach(c=>{const r=c.querySelector(".classifier-items"),n=c.querySelector(".toggle-icon"),i=c.querySelector(".group-toggle");r.style.display="none",n.textContent="▶",i.classList.remove("expanded")}),e.dataset.state="collapsed",l.textContent="Expand All"):(s.forEach(c=>{const r=c.querySelector(".classifier-items"),n=c.querySelector(".toggle-icon"),i=c.querySelector(".group-toggle");r.style.display="block",n.textContent="▼",i.classList.add("expanded")}),e.dataset.state="expanded",l.textContent="Collapse All")}handleSearch(t){const e=t.target.value.toLowerCase();this.classifierItemTargets.forEach(s=>{var m,p,h;const c=((m=s.dataset.classifierName)==null?void 0:m.toLowerCase())||"",r=((p=s.dataset.group)==null?void 0:p.toLowerCase())||"",n=((h=s.dataset.type)==null?void 0:h.toLowerCase())||"",i=c.includes(e)||r.includes(e)||n.includes(e);if(s.style.display=i?"block":"none",i){const d=s.closest(".classifier-group");if(d){d.style.display="block";const f=d.querySelector(".classifier-items"),y=d.querySelector(".group-toggle"),C=y.querySelector(".toggle-icon");f.style.display==="none"&&(f.style.display="block",C.textContent="▼",y.classList.add("expanded"))}}}),this.element.querySelectorAll(".classifier-group").forEach(s=>{s.querySelectorAll('.classifier-item[style*="block"], .classifier-item:not([style*="none"])').length===0&&e!==""?s.style.display="none":e===""&&(s.style.display="block")})}clearAllAction(){this.element.querySelectorAll(".classifier-item input:checked").forEach(e=>{e.checked=!1,this.removeClassifierFromFormset(e.value)}),this.updateSelectedCount()}updateSelectedCount(){const t=this.element.querySelectorAll(".classifier-item input:checked").length;this.hasSelectedCountTarget&&(this.selectedCountTarget.textContent=t);const e=this.element.querySelector(".selected-count-container");e&&(e.style.display=t>0?"inline-block":"none");const o=this.element.querySelector(".total-selected-count-container");o&&(o.style.display=t>0?"inline-block":"none"),this.updateGroupSelectionCounts()}clearGroupSelections(t,e=null){t.dataset.group,t.querySelectorAll("input:checked").forEach(l=>{l!==e&&(l.checked=!1,this.removeClassifierFromFormset(l.value))})}showLimitError(t,e){const o=t.dataset.group,l=t.dataset.type;let s=t.querySelector(".selection-limit-error");s||(s=document.createElement("div"),s.className="selection-limit-error",t.appendChild(s)),s.textContent=`Maximum ${e} selection${e>1?"s":""} allowed for ${l}: ${o}`,s.style.display="block",setTimeout(()=>{s&&(s.style.display="none")},3e3)}updateGroupSelectionCounts(){this.element.querySelectorAll(".classifier-group").forEach(e=>{e.dataset.group,e.dataset.type;const o=parseInt(e.dataset.maxSelections)||0,l=e.querySelectorAll(".classifier-item input:checked").length;e.querySelectorAll(".classifier-item input").length;const s=e.querySelector(".group-toggle"),c=s.querySelector(".group-selected-badge"),r=s.querySelector(".toggle-icon"),n=e.querySelector(".classifier-items");if(c&&c.remove(),l>0){const i=document.createElement("span");i.className="badge group-selected-badge",o===1?i.textContent="1 selected":o>1?i.textContent=`${l}/${o} selected`:i.textContent=`${l} selected`,s.appendChild(i),n.style.display==="none"&&(n.style.display="block",r.textContent="▼",s.classList.add("expanded"))}else n.style.display="none",r.textContent="▶",s.classList.remove("expanded")})}}g(S,"targets",["searchInput","classifierList","classifierItem","selectedCount"]);const u=k.start();u.register("classifier-modal",S);(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")&&(u.debug=!0);window.Stimulus=u;document.addEventListener("DOMContentLoaded",function(){console.log("Wagtail Feathers admin JavaScript loaded"),new MutationObserver(function(t){t.forEach(function(e){e.type==="childList"&&e.addedNodes.forEach(function(o){o.nodeType===Node.ELEMENT_NODE&&o.querySelectorAll('[data-controller*="classifier-modal"]').length>0&&(console.log("Classifier modal detected, reinitializing Stimulus"),u.load())})})}).observe(document.body,{childList:!0,subtree:!0})});
