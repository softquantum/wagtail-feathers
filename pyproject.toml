[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "wagtail-feathers"
description = "A comprehensive Wagtail CMS extension providing theming and foundational features."
authors = [{name="Maxime Decooman", email="maxime@softquantum.com"},]
maintainers = [{name="Maxime Decooman", email="maxime@softquantum.com"},]
keywords = ["wagtail", "django", "cms", "content", "management", "taxonomy", "navigation", "themes"]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 7",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ["version"]
requires-python = ">=3.11"
dependencies = [
    "Wagtail>=6.4",
    "wagtail-markdown>=0.10.0",
    "django-countries[pyuca]>=7.6.1",
    "django-extensions>=3.2.0",
    "python-decouple>=3.8",
]

[project.optional-dependencies]
localize = [
    "wagtail-localize>=1.9",
]
dev = [
    "pytest>=8.0.0",
    "pytest-django>=4.8.0",
    "pytest-cov>=4.0.0",
    "factory-boy>=3.3.0",
    "ruff>=0.1.0",
    "tox>=4.0.0",
]
production = [
    "psycopg>=3.2",
]

[project.urls]
Home = "https://github.com/softquantum/wagtail-feathers"
Issues = "https://github.com/softquantum/wagtail-feathers/issues"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
django_find_project = false
python_files = ['tests_*.py', 'test_*.py', '*_tests.py', '*_test.py']
filterwarnings = [
     'ignore::pytest.PytestAssertRewriteWarning:_pytest.config',
     'ignore::django.utils.deprecation.RemovedInDjango60Warning',
     'ignore::DeprecationWarning',
]
pythonpath = ["src", "."]
addopts = "--cov=wagtail_feathers --cov-report=xml --cov-report=term-missing --reuse-db --no-cov-on-fail"

[tool.flit.sdist]
include = ["LICENSE", "README.md", "src/"]
exclude = [
    "src/wagtail_feathers/tests/logs/",
    ".github/",
    ".git/",
    ".gitignore",
    ".coverage",
    "coverage.xml",
    "*.pyc",
    "__pycache__/",
    "*.db",
    "*.sqlite3",
    "*.log",
    ".tox/",
    "dist/",
    "build/",
]

[tool.coverage.run]
source = ["src/wagtail_feathers"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/fixtures/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.ruff]
target-version = "py311"
line-length = 120
src = ["src"]
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
]

[tool.ruff.lint]
select = ["B", "D", "E", "F", "I"]
ignore = ["E501", "D100", "D102", "D103", "D105", "D106", "D107", "D203", "D213", "D406"]
fixable = ["E", "F", "I"]
unfixable = ["B", "F401", "F841"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
per-file-ignores = { "__init__.py" = ["E402", "F401"] }
mccabe = { max-complexity = 10 }
flake8-quotes = { docstring-quotes = "double" }

[tool.ruff.format]
quote-style = "double"